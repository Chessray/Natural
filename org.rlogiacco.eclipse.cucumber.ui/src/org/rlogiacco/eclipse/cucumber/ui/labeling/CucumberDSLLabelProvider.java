/*
 * generated by Xtext
 */
package org.rlogiacco.eclipse.cucumber.ui.labeling;

import org.eclipse.emf.edit.ui.provider.AdapterFactoryLabelProvider;
import org.eclipse.xtext.ui.label.DefaultEObjectLabelProvider;
import org.rlogiacco.eclipse.cucumber.cucumberDSL.Background;
import org.rlogiacco.eclipse.cucumber.cucumberDSL.Example;
import org.rlogiacco.eclipse.cucumber.cucumberDSL.Feature;
import org.rlogiacco.eclipse.cucumber.cucumberDSL.Line;
import org.rlogiacco.eclipse.cucumber.cucumberDSL.Model;
import org.rlogiacco.eclipse.cucumber.cucumberDSL.Scenario;
import org.rlogiacco.eclipse.cucumber.cucumberDSL.ScenarioOutline;
import org.rlogiacco.eclipse.cucumber.cucumberDSL.Step;
import org.rlogiacco.eclipse.cucumber.cucumberDSL.Table;

import com.google.inject.Inject;

/**
 * Provides labels for a EObjects.
 * 
 * see
 * http://www.eclipse.org/Xtext/documentation/latest/xtext.html#labelProvider
 */
public class CucumberDSLLabelProvider extends DefaultEObjectLabelProvider {

	@Inject
	public CucumberDSLLabelProvider(AdapterFactoryLabelProvider delegate) {
		super(delegate);
	}
	
	String image(Model ele) {
		return "feature.png";
	}

	String text(Feature ele) {
		return ele.getTitle().getContent();
	}

	String image(Feature ele) {
		return "feature.png";
	}

	String text(Background ele) {
		return ele.getTitle().getContent();
	}

	String image(Background ele) {
		return "background.gif";
	}

	String text(Scenario ele) {
		return ele.getTitle().getContent();
	}

	String image(Scenario ele) {
		return "scenario.gif";
	}

	String text(ScenarioOutline ele) {
		return ele.getTitle().getContent();
	}

	String image(ScenarioOutline ele) {
		return "scenario.gif";
	}

	String text(Step ele) {
		return ele.getType() + " " + ele.getDescription().getContent();
	}

	String image(Step ele) {
		return "step.gif";
	}

	String text(Table ele) {
		return "Table of " + ele.getRows().size() + " rows";
	}

	String image(Table ele) {
		return "table.gif";
	}

	String text(Example ele) {
		for (Line description : ele.getDescription()) {
			if (!description.getContent().isEmpty())
				return description.toString();
		}
		return "Example";
	}

	String image(Example ele) {
		return "example.gif";
	}
}
